{"version":3,"sources":["components/AlbumCard/AlbumCard.styled.ts","APIAddress.ts","components/AlbumCard/AlbumCard.tsx","components/AlbumGrid/AlbumGrid.styled.ts","components/AlbumGrid/AlbumGrid.tsx","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","colors.ts","components/PageSelect/PageSelect.styled.ts","components/PageSelect/helpers.ts","components/PageSelectItems/PageSelectItems.styled.ts","components/PageSelectItems/PageSelectItems.tsx","components/PageSelect/PageSelect.tsx","components/TopSearchBar/TopSearchBar.styled.ts","components/Button/Button.styled.ts","components/Button/Button.tsx","components/Search/Search.styled.ts","components/Search/Search.tsx","components/TopSearchBar/TopSearchBar.tsx","pages/Albums/Albums.tsx","pages/App/App.styled.ts","components/NavBar/NavBar.styled.ts","components/NavItem/NavItem.styled.ts","components/NavItem/NavItem.tsx","components/NavBar/NavBar.tsx","components/Card/Card.styled.ts","components/Card/Card.tsx","components/Grid/Grid.styled.ts","components/Grid/Grid.tsx","components/ImageZoom/ImageZoom.styled.ts","components/ImageZoom/ImageZoom.tsx","pages/Photos/Photos.tsx","pages/Profile/Profile.styled.ts","components/ProfileLayout/ProfileLayout.styled.ts","components/InputField/InputField.styled.ts","components/InputField/InputField.tsx","components/ProfileLayout/ProfileLayout.tsx","pages/Profile/Profile.tsx","pages/App/App.tsx","reportWebVitals.js","index.tsx"],"names":["Layout","styled","div","Label","span","ImageRow","Button","URL","AlbumCard","name","albumNumber","useState","photos","setPhotos","useEffect","fetch","then","response","json","responseData","catch","error","console","log","map","link","index","src","url","alt","to","AlbumGrid","children","rotate","keyframes","Icon","CachedIcon","Wrapper","Loader","colors","SelectContainer","ItemCountWrapper","ItemCountButton","ItemCountList","ItemCountListItem","ItemCountNumber","ItemCountLabel","counts","Container","SelectItem","PageSelectItems","currentPage","setCurrentPage","pageCount","flags","leftDots","rightDots","beginning","end","createPageNumbers","start","length","Array","from","_","idx","range","page","className","undefined","onClick","prev","next","PageSelect","currentPageSetter","pagesCount","itemCount","itemsPerPageSetter","dropdownToggle","setDropdownToggle","number","setItemCount","changeItemCount","button","action","theme","e","preventDefault","performFunction","InputWrapper","InputBox","input","InputLabel","Search","label","inputSetter","type","onChange","event","target","value","TopSearchBar","setSearchQuery","inputQuery","setInputQuery","Albums","query","setQuery","albums","setAlbums","setPage","setPageCount","itemsPerPage","setItemsPerPage","isLoading","setIsLoading","firstPhotoIndex","Math","ceil","slice","finally","id","title","Header","Logo","li","Item","NavItem","isExact","icon","exact","navData","NavBar","Card","Grid","CloseButton","Background","Image","ImageZoom","setZoomTrigger","imgUrl","imgLabel","Photos","isZoomed","setIsZoomed","zoomUrl","setZoomUrl","zoomLabel","setZoomLabel","useParams","path","thumbnailUrl","setZoom","setLabel","Section","FirstHeader","SectionHeader","SectionLayout","CompanyLayout","InputField","fillValue","readOnly","ProfileLayout","user","personal","phone","username","website","email","address","street","city","suite","zipcode","company","catchPhrase","bs","initUser","Profile","setUser","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.167e5f71.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 5px grey;\r\n  padding: 0.5rem;\r\n  height: auto;\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n    align-self: flex-end;\r\n    margin-top: auto;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  margin-top: 1rem;\r\n  padding: 0rem 2rem 0rem 2rem;\r\n  overflow: scroll;\r\n  font-size: 1.25rem;\r\n  height: 20%;\r\n  font-family: \"Roboto\", sans-serif;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ImageRow = styled.div`\r\n  display: grid;\r\n  grid-column-gap: 0.5rem;\r\n  margin: 2rem 0rem 2rem 0rem;\r\n  background-color: white;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  align-items: center;\r\n  img {\r\n    width: 100%;\r\n    height: 80%;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  display: flex;\r\n  border: 1px solid lightgrey;\r\n  font-family: \"Roboto\", sans-serif;\r\n  border-radius: 3px;\r\n  font-size: 1rem;\r\n  padding: 0.5rem;\r\n  align-items: center;\r\n  .MuiSvgIcon-root {\r\n    margin-left: 0.5rem;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n","export const URL = \"https://jsonplaceholder.typicode.com\";\r\n","import { AlbumCardProps, StateProps } from \"./AlbumCard.d\";\r\nimport { Button, ImageRow, Label, Layout } from \"./AlbumCard.styled\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\n\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { URL } from \"../../APIAddress\";\r\n\r\n/**\r\n * Album card component displaying the 3 first photos from an album, used for Albums page.\r\n */\r\nconst AlbumCard: FC<AlbumCardProps> = ({ name, albumNumber }) => {\r\n  const [photos, setPhotos] = useState<StateProps[]>([]);\r\n  useEffect(() => {\r\n    fetch(`${URL}/albums/${albumNumber}/photos?_start=0&_end=3`)\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        setPhotos(responseData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  }, [albumNumber]);\r\n  return (\r\n    <Layout data-testid=\"testAlbumCard\">\r\n      <Label>{name}</Label>\r\n      <ImageRow data-testid=\"imageRow\">\r\n        {photos.map((link, index) => (\r\n          <img src={link.url} key={index} alt=\"\" />\r\n        ))}\r\n      </ImageRow>\r\n      <NavLink to={`/albums/${albumNumber}/photos/`}>\r\n        <Button>\r\n          SEE MORE\r\n          <ArrowForwardIosIcon />\r\n        </Button>\r\n      </NavLink>\r\n    </Layout>\r\n  );\r\n};\r\nexport default AlbumCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Layout = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 1rem;\r\n  margin-bottom: 2rem;\r\n  min-width: 0;\r\n  min-height: 0;\r\n  @media (max-width: 740px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  @media (max-width: 510px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Layout } from \"./AlbumGrid.styled\";\r\n\r\nconst AlbumGrid: FC<any> = ({ children }) => <Layout>{children}</Layout>;\r\n\r\nexport default AlbumGrid;\r\n","import CachedIcon from \"@material-ui/icons/Cached\";\r\nimport { keyframes } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const rotate = keyframes`\r\n  from {\r\n    transform: rotate(360deg);\r\n    transform-origin: center;\r\n  }\r\n\r\n  to {\r\n    transform: rotate(0deg);\r\n    transform-origin: center;\r\n  }\r\n`;\r\n\r\nexport const Icon = styled(CachedIcon)`\r\n  animation: ${rotate} 2s linear infinite;\r\n  margin: auto;\r\n  &.MuiSvgIcon-root {\r\n    font-size: 10rem;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 1.5rem;\r\n  display: block;\r\n  text-align: center;\r\n  font-family: \"Roboto\", sans-serif;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 5rem 0rem;\r\n`;\r\n","import { Icon, Label, Wrapper } from \"./Loader.styled\";\r\nimport React, { FC } from \"react\";\r\n\r\n/**\r\n * Loader component displayed before the component fetching is done.\r\n */\r\nconst Loader: FC = () => (\r\n  <Wrapper>\r\n    <Icon />\r\n    <Label>Loading</Label>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Loader;\r\n","export const colors = {\r\n  white: \"#e5e5e5\",\r\n  lightgrey: \"#d9d9d9\",\r\n  grey: \"#aaaaaa\",\r\n  semitransparent: \"rgba(0, 0, 0, 0.7)\",\r\n  transparent: \"rgba(255, 0, 0, 0)\",\r\n  ghostwhite: \"#F8F8FF\"\r\n};\r\n","import { colors } from \"../../colors\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SelectContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  svg {\r\n    &.MuiSvgIcon-root {\r\n      font-size: 1rem;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  @media (max-width: 720px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const SelectItem = styled.div`\r\n  margin: 0.5rem;\r\n  padding: 0.5rem 0.9rem;\r\n  cursor: pointer;\r\n  border-radius: 500px;\r\n  &.active {\r\n    background-color: lightgrey;\r\n  }\r\n`;\r\n\r\nexport const ItemCountWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const ItemCountButton = styled.div`\r\n  display: inline-flex;\r\n  align-self: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 5px;\r\n  padding-right: 0.5rem;\r\n  margin-left: 2rem;\r\n  cursor: pointer;\r\n  &:active {\r\n    background-color: ${colors.lightgrey};\r\n  }\r\n`;\r\n\r\nexport const ItemCountList = styled.div`\r\n  font-size: 0.76rem;\r\n  margin: 0rem;\r\n  position: absolute;\r\n  border: 1px solid lightgrey;\r\n  border-top: none;\r\n  border-radius: 5px;\r\n  right: 0px;\r\n  flex-direction: column;\r\n  &.active {\r\n    display: flex;\r\n  }\r\n  &.hidden {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ItemCountListItem = styled.div`\r\n  padding: 0.5rem 1.84rem 0.5rem 1.84rem;\r\n  font-family: \"Roboto\", sans-serif;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.lightgrey};\r\n  }\r\n`;\r\n\r\nexport const ItemCountNumber = styled.div`\r\n  display: inline-block;\r\n  padding: 0.5rem 0.5rem 0.5rem 1.5rem;\r\n  background-color: ${colors.transparent};\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  font-family: \"Roboto\", sans-serif;\r\n  border: none;\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport const ItemCountLabel = styled.span`\r\n  position: absolute;\r\n  background-color: ghostwhite;\r\n  font-family: \"Roboto\", sans-serif;\r\n  color: grey;\r\n  top: -0.5rem;\r\n  left: 0.75rem;\r\n  font-size: 0.75rem;\r\n`;\r\n","export const zoom = (\r\n  setZoom: (bool: boolean) => void,\r\n  setUrl: (value: string) => void,\r\n  imgUrl: string,\r\n  setLabel: (value: string) => void,\r\n  label: string\r\n) => {\r\n  setUrl(imgUrl);\r\n  setLabel(label);\r\n  setZoom(true);\r\n};\r\n\r\nexport const range = (start: number, end: number) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const prev = (\r\n  currentPage: number,\r\n  setCurrentPage: (number: number) => void\r\n) => {\r\n  if (currentPage > 1) {\r\n    setCurrentPage(currentPage - 1);\r\n  }\r\n};\r\n\r\nexport const next = (\r\n  currentPage: number,\r\n  setCurrentPage: (number: number) => void,\r\n  pageCount: number\r\n) => {\r\n  if (currentPage < pageCount) {\r\n    setCurrentPage(currentPage + 1);\r\n  }\r\n};\r\n\r\nexport const changeItemCount = (\r\n  itemCount: number,\r\n  setItemCount: (count: number) => void,\r\n  setDropdownToggle: (bool: boolean) => void\r\n) => {\r\n  setItemCount(itemCount);\r\n  setDropdownToggle(false);\r\n};\r\n\r\nexport const counts = [12, 16, 20];\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  svg {\r\n    &.MuiSvgIcon-root {\r\n      font-size: 1rem;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SelectItem = styled.div`\r\n  margin: 0.5rem;\r\n  padding: 0.5rem 0.9rem;\r\n  font-family: \"Roboto\", sans-serif;\r\n  cursor: pointer;\r\n  border-radius: 500px;\r\n  &.active {\r\n    background-color: lightgrey;\r\n  }\r\n  @media (max-width: 470px) {\r\n    margin: 0.25rem;\r\n  }\r\n  @media (max-width: 400px) {\r\n    margin: 0;\r\n  }\r\n  @media (max-width: 350px) {\r\n    padding: 0.3rem 0.7rem;\r\n  }\r\n`;\r\n","import { Container, SelectItem } from \"./PageSelectItems.styled\";\r\nimport React, { FC } from \"react\";\r\nimport { next, prev, range } from \"../PageSelect/helpers\";\r\n\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { PageItemProps } from \"./PageSelectItems.d\";\r\n\r\nconst PageSelectItems: FC<PageItemProps> = ({\r\n  currentPage,\r\n  setCurrentPage,\r\n  pageCount,\r\n}) => {\r\n  let flags = {\r\n    leftDots: false,\r\n    rightDots: false,\r\n    beginning: 0,\r\n    end: 0,\r\n  };\r\n  switch (true) {\r\n    case pageCount < 8: //no dots are displayed, pageCount is less or equal to item limit in selectBar.\r\n      flags = {\r\n        ...flags,\r\n        beginning: 2,\r\n        end: pageCount,\r\n      };\r\n      break;\r\n    case currentPage <= 4 && pageCount > 7: //only right dots are displayed\r\n      flags = {\r\n        ...flags,\r\n        rightDots: true,\r\n        beginning: 2,\r\n        end: 5,\r\n      };\r\n      break;\r\n    case currentPage >= 5 && currentPage <= pageCount - 4 && pageCount > 7: //left and right dots are displayed\r\n      flags = {\r\n        leftDots: true,\r\n        rightDots: true,\r\n        beginning: currentPage - 1,\r\n        end: currentPage + 1,\r\n      };\r\n      break;\r\n    case currentPage >= pageCount - 3 && pageCount > 7: //only left dots are displayed\r\n      flags = {\r\n        ...flags,\r\n        leftDots: true,\r\n        beginning: pageCount - 4,\r\n        end: pageCount - 1,\r\n      };\r\n      break;\r\n    default:\r\n      return <Container />;\r\n  }\r\n  let createPageNumbers = range(flags.beginning, flags.end).map(\r\n    (page, index) => (\r\n      <SelectItem\r\n        key={index}\r\n        className={currentPage === page ? \"active\" : undefined}\r\n        onClick={() => setCurrentPage(page)}\r\n      >\r\n        {page}\r\n      </SelectItem>\r\n    )\r\n  );\r\n  return (\r\n    <Container>\r\n      <ArrowBackIosIcon onClick={() => prev(currentPage, setCurrentPage)} />\r\n      <SelectItem\r\n        className={currentPage === 1 ? \"active\" : undefined}\r\n        onClick={() => setCurrentPage(1)}\r\n      >\r\n        1\r\n      </SelectItem>\r\n      {flags.leftDots && <SelectItem>...</SelectItem>}\r\n      {createPageNumbers}\r\n      {flags.rightDots && <SelectItem>...</SelectItem>}\r\n      {pageCount > 7 && (\r\n        <SelectItem\r\n          className={currentPage === pageCount ? \"active\" : undefined}\r\n          onClick={() => setCurrentPage(pageCount)}\r\n        >\r\n          {pageCount}\r\n        </SelectItem>\r\n      )}\r\n      <ArrowForwardIosIcon\r\n        onClick={() => next(currentPage, setCurrentPage, pageCount)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PageSelectItems;\r\n","import {\r\n  ItemCountButton,\r\n  ItemCountLabel,\r\n  ItemCountList,\r\n  ItemCountListItem,\r\n  ItemCountNumber,\r\n  ItemCountWrapper,\r\n  SelectContainer,\r\n} from \"./PageSelect.styled\";\r\nimport React, { FC, useState } from \"react\";\r\nimport { changeItemCount, counts } from \"./helpers\";\r\n\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport PageSelectItems from \"../PageSelectItems/PageSelectItems\";\r\nimport { PageSelectProps } from './PageSelect.d';\r\n\r\n/**\r\n * Page selector component used for pagination in Photos and Albums Pages.\r\n */\r\nconst PageSelect: FC<PageSelectProps> = ({\r\n  currentPage,\r\n  currentPageSetter,\r\n  pagesCount,\r\n  itemCount,\r\n  itemsPerPageSetter,\r\n}) => {\r\n  const [dropdownToggle, setDropdownToggle] = useState(false);\r\n  return (\r\n    <div>\r\n      <SelectContainer>\r\n        <PageSelectItems\r\n          currentPage={currentPage}\r\n          setCurrentPage={currentPageSetter}\r\n          pageCount={pagesCount}\r\n        />\r\n        <ItemCountWrapper>\r\n          <ItemCountButton data-testid = \"testButton\" onClick={() => setDropdownToggle(!dropdownToggle)}>\r\n            <ItemCountLabel>Per page</ItemCountLabel>\r\n            <ItemCountNumber>{itemCount}</ItemCountNumber>\r\n            <ArrowDropDownIcon />\r\n          </ItemCountButton>\r\n          <ItemCountList data-testid = \"testList\" className={dropdownToggle ? \"active\" : \"hidden\"}>\r\n            {counts.map((number, index) => (\r\n              <ItemCountListItem\r\n                data-testid = \"testListItem\"\r\n                key={index}\r\n                onClick={() =>\r\n                  changeItemCount(number, itemsPerPageSetter, setDropdownToggle)\r\n                }\r\n              >\r\n                {number}\r\n              </ItemCountListItem>\r\n            ))}\r\n          </ItemCountList>\r\n        </ItemCountWrapper>\r\n      </SelectContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageSelect;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  margin-bottom: 1.5rem;\r\n  @media (max-width: 620px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nexport const Label = styled.span`\r\n  margin-right: auto;\r\n  font-family: \"Roboto\", sans-serif;\r\n  @media (max-width: 620px) {\r\n    flex-direction: column;\r\n    margin: inherit;\r\n  }\r\n`;\r\n","import { colors } from \"../../colors\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n  display: inline-block;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  font-family: \"Roboto\", sans-serif;\r\n  background-color: ${colors.white};\r\n  border: none;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 4px 3px ${colors.grey};\r\n  @media (max-width: 620px) {\r\n    margin: 1.5rem 0rem 1rem 0rem;\r\n  }\r\n  &.secondary {\r\n    background-color: ${colors.ghostwhite};\r\n    border: 1px solid ${colors.white};\r\n    color: black;\r\n  }\r\n\r\n  &:active {\r\n    background-color: ${colors.lightgrey};\r\n  }\r\n`;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { ButtonProps } from \"./Button.d\";\r\nimport { Wrapper } from \"./Button.styled\";\r\n\r\nconst performFunction = (\r\n  e: React.MouseEvent<HTMLElement, MouseEvent>,\r\n  action: () => void\r\n) => {\r\n  e.preventDefault();\r\n  action();\r\n};\r\n\r\n/**\r\n * Button component used mainly for the top search bar.\r\n */\r\nconst Button: FC<ButtonProps> = ({ name, action, theme }) => (\r\n  <Wrapper\r\n    className={theme === \"secondary\" ? \"secondary\" : null}\r\n    onClick={(e) => {\r\n      performFunction(e, action);\r\n    }}\r\n  >\r\n    {name}\r\n  </Wrapper>\r\n);\r\n\r\nexport default Button;\r\n","import { colors } from \"../../colors\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: inline-flex;\r\n  background-color: ${colors.transparent};\r\n  position: relative;\r\n  align-items: center;\r\n  margin: 0rem 0.5rem;\r\n  padding: 0px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 5px;\r\n  svg {\r\n    vertical-align: center;\r\n    color: grey;\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\nexport const InputBox = styled.input`\r\n  font-family: \"Roboto\", sans-serif;\r\n  background-color: ${colors.transparent};\r\n  font-size: 1.25rem;\r\n  margin: 0.4rem 0rem;\r\n  width: 10rem;\r\n  border-width: 0px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nexport const InputLabel = styled.span`\r\n  position: absolute;\r\n  font-family: \"Roboto\", sans-serif;\r\n  background-color: ghostwhite;\r\n  color: grey;\r\n  top: -0.5rem;\r\n  left: 1.2rem;\r\n  font-size: 0.75rem;\r\n`;\r\n","import { InputBox, InputLabel, InputWrapper } from \"./Search.styled\";\r\nimport React, { FC } from \"react\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { SearchProps } from \"./Search.d\";\r\n\r\n/**\r\n * Search input component used for getting queries from the user. Used in Photos and Albums pages.\r\n */\r\nconst Search: FC<SearchProps> = ({ label, inputSetter }) => (\r\n  <InputWrapper>\r\n    <SearchIcon />\r\n    <InputLabel>{label}</InputLabel>\r\n    <InputBox\r\n      type=\"text\"\r\n      onChange={(event) => {\r\n        inputSetter(event.target.value);\r\n      }}\r\n    />\r\n  </InputWrapper>\r\n);\r\n\r\nexport default Search;\r\n","import { Container, Label } from \"./TopSearchBar.styled\";\r\nimport React, { FC, useState } from \"react\";\r\n\r\nimport Button from \"../../components/Button/Button\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport { TopSearchBarProps } from \"./TopSearchBar.d\";\r\n\r\n/**\r\n * Top search bar used for the search feature used on the Albums and Photos pages.\r\n */\r\nconst TopSearchBar: FC<TopSearchBarProps> = ({ label, setSearchQuery }) => {\r\n  const [inputQuery, setInputQuery] = useState(\"\");\r\n  return (\r\n    <Container>\r\n      <Label>{label}</Label>\r\n      <Search inputSetter={setInputQuery} label=\"Search by title\" />\r\n      <Button\r\n        name=\"SEARCH\"\r\n        action={() => setSearchQuery(inputQuery)}\r\n        theme=\"primary\"\r\n      ></Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TopSearchBar;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\n\r\nimport AlbumCard from \"../../components/AlbumCard/AlbumCard\";\r\nimport AlbumGrid from \"../../components/AlbumGrid/AlbumGrid\";\r\nimport { AlbumsProps } from \"./Albums.d\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport PageSelect from \"../../components/PageSelect/PageSelect\";\r\nimport TopSearchBar from \"../../components/TopSearchBar/TopSearchBar\";\r\nimport { URL } from \"../../APIAddress\";\r\n\r\n/**\r\n * Component used to display the final layout of the Albums page.\r\n */\r\nconst Albums: FC = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [albums, setAlbums] = useState<AlbumsProps[]>([]);\r\n  const [page, setPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(12);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let firstPhotoIndex = (page - 1) * itemsPerPage;\r\n    setIsLoading(true);\r\n    fetch(`${URL}/albums?q=${query}`)\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        setPageCount(Math.ceil(responseData.length / itemsPerPage));\r\n        setAlbums(\r\n          responseData.slice(firstPhotoIndex, firstPhotoIndex + itemsPerPage)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [itemsPerPage, page, query]);\r\n  return (\r\n    <div>\r\n      <TopSearchBar label=\"Your Albums\" setSearchQuery={setQuery} />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div data-testid=\"testAlbum\">\r\n          <AlbumGrid>\r\n            {albums.map(({ id, title }) => (\r\n              <AlbumCard name={title} albumNumber={id} key={id} />\r\n            ))}\r\n          </AlbumGrid>\r\n          <PageSelect\r\n            currentPage={page}\r\n            currentPageSetter={setPage}\r\n            pagesCount={pageCount}\r\n            itemCount={itemsPerPage}\r\n            itemsPerPageSetter={setItemsPerPage}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Albums;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Layout = styled.div`\r\n  padding: 2.5rem 15% 10rem 15%;\r\n  font-size: 2rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: block;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 0rem 2rem;\r\n  margin: 0;\r\n  display: flex;\r\n  height: 4rem;\r\n  background-color: white;\r\n  box-shadow: 0px 0px 10px grey;\r\n  font-family: \"Roboto\" sans-serif;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  list-style-type: none;\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n  @media (max-width: 576px) {\r\n    height: auto;\r\n    flex-direction: column;\r\n    a {\r\n      padding: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-size: 1.125rem;\r\n  margin: 0rem 0.5rem;\r\n  svg {\r\n    vertical-align: sub;\r\n    padding: 0 0.5rem;\r\n  }\r\n  span {\r\n    display: inline-block;\r\n  }\r\n  @media (max-width: 576px) {\r\n    margin: 0;\r\n    padding: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.li`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 1.25rem;\r\n  margin-right: auto;\r\n  @media (max-width: 576px) {\r\n    margin: 1rem 0rem 1rem 0rem;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Item = styled.li`\r\n  font-size: 1.125rem;\r\n  font-family: \"Roboto\", sans-serif;\r\n  margin: 0rem 0.5rem;\r\n  cursor: pointer;\r\n  svg {\r\n    vertical-align: sub;\r\n    padding: 0 0.5rem;\r\n  }\r\n  span {\r\n    display: inline-block;\r\n  }\r\n`;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Item } from \"./NavItem.styled\";\r\nimport { NavItemProps } from './NavItem.d';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavItem: FC<NavItemProps> = ({ label, link, isExact, icon }) => (\r\n  <NavLink exact={isExact} to={link}>\r\n    <Item>\r\n      {icon}\r\n      {label}\r\n    </Item>\r\n  </NavLink>\r\n);\r\n\r\nexport default NavItem;\r\n","import { Container, Header, Logo } from \"./NavBar.styled\";\r\nimport React, { FC } from \"react\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport NavItem from \"../NavItem/NavItem\";\r\nimport PhotoAlbumIcon from \"@material-ui/icons/PhotoAlbum\";\r\nimport PhotoIcon from \"@material-ui/icons/Photo\";\r\n\r\nconst navData = [\r\n  {\r\n    label: \"PHOTOS\",\r\n    link: \"/\",\r\n    exact: true,\r\n    icon: <PhotoIcon />,\r\n  },\r\n  {\r\n    label: \"ALBUMS\",\r\n    link: \"/albums\",\r\n    exact: false,\r\n    icon: <PhotoAlbumIcon />,\r\n  },\r\n  {\r\n    label: \"PROFILE\",\r\n    link: \"/profile/1\",\r\n    exact: false,\r\n    icon: <AccountCircleIcon />,\r\n  },\r\n];\r\n/**\r\n * Navigation bar component used as a header.\r\n */\r\nconst NavBar: FC = () => (\r\n  <Header>\r\n    <Container>\r\n      <Logo>PHOTOS APP</Logo>\r\n      {navData.map(({ link, label, exact, icon }, index) => (\r\n        <NavItem\r\n          link={link}\r\n          label={label}\r\n          isExact={exact}\r\n          icon={icon}\r\n          key={index}\r\n        />\r\n      ))}\r\n    </Container>\r\n  </Header>\r\n);\r\n\r\nexport default NavBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: white;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 5px 5px grey;\r\n  height: 20rem;\r\n  overflow: hidden;\r\n  img {\r\n    border-top: 5px;\r\n    min-width: 100%;\r\n    height: 80%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  height: 10%;\r\n  margin: 1rem 1rem 0.5rem 1rem;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;\r\n  font-size: 1rem;\r\n  font-family: \"Roboto\", sans-serif;\r\n  &::-webkit-scrollbar {\r\n    width: 0 !important;\r\n  }\r\n`;\r\n","import { Label, Layout } from \"./Card.styled\";\r\nimport React, { FC } from \"react\";\r\n\r\nimport { CardProps } from \"./Card.d\";\r\n\r\n/**\r\n * Card component used to display the photos on the Photos page.\r\n */\r\nconst Card: FC<CardProps> = ({ name, url, action }) => (\r\n  <Layout data-testid=\"testCard\" onClick={action}>\r\n    <img src={url} alt={name}></img>\r\n    <Label>{name}</Label>\r\n  </Layout>\r\n);\r\n\r\nexport default Card;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Layout = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 1rem;\r\n  margin-bottom: 2rem;\r\n  @media (max-width: 880px) {\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n  @media (max-width: 670px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  @media (max-width: 440px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Layout } from \"./Grid.styled\";\r\n\r\nconst Grid: FC<any> = ({ children }) => <Layout>{children}</Layout>;\r\n\r\nexport default Grid;\r\n","import { colors } from \"../../colors\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const CloseButton = styled.div`\r\n  margin-top: 1rem;\r\n  margin-right: 2rem;\r\n  align-self: flex-end;\r\n  svg {\r\n    color: white;\r\n    &.MuiSvgIcon-root {\r\n      font-size: 2rem;\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  backdrop-filter: blur(5px);\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  left: 0px;\r\n  top: 0px;\r\n  background-color: ${colors.semitransparent};\r\n  z-index: 2;\r\n`;\r\n\r\nexport const Image = styled.div`\r\n  margin-top: 5rem;\r\n  margin-bottom: 2rem;\r\n  img {\r\n    max-width: 20rem;\r\n  }\r\n  @media (max-width: 430px) {\r\n    img {\r\n      max-width: 17rem;\r\n    }\r\n  }\r\n  @media (max-width: 330px) {\r\n    img {\r\n      max-width: 15rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  color:white;\r\n  font-size: 1.25rem;\r\n  font-family: \"Roboto\", sans-serif;\r\n  @media(max-width:430px){\r\n    font-size:1rem;\r\n  @media(max-width:360px){\r\n    font-size:0.8rem;\r\n  }\r\n`;\r\n","import { Background, CloseButton, Image, Label } from \"./ImageZoom.styled\";\r\nimport React, { FC } from \"react\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { ImageZoomProps } from \"./ImageZoom.d\";\r\n\r\nconst ImageZoom: FC<ImageZoomProps> = ({\r\n  setZoomTrigger,\r\n  imgUrl,\r\n  imgLabel,\r\n}) => (\r\n  <Background data-testid=\"testZoom\">\r\n    <CloseButton\r\n      data-testid=\"testButton\"\r\n      onClick={(e) => setZoomTrigger(false)}\r\n    >\r\n      <CloseIcon />\r\n    </CloseButton>\r\n    <Image>\r\n      <img src={imgUrl} alt=\"\" />\r\n    </Image>\r\n    <Label>{imgLabel}</Label>\r\n  </Background>\r\n);\r\n\r\nexport default ImageZoom;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../../components/Card/Card\";\r\nimport Grid from \"../../components/Grid/Grid\";\r\nimport ImageZoom from \"../../components/ImageZoom/ImageZoom\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport PageSelect from \"../../components/PageSelect/PageSelect\";\r\nimport TopSearchBar from \"../../components/TopSearchBar/TopSearchBar\";\r\nimport { URL } from \"../../APIAddress\";\r\nimport { idInterface } from \"./Photos.d\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { zoom } from \"../../components/PageSelect/helpers\";\r\n\r\n/**\r\n * Component used to display the final layout of the Photos page.\r\n */\r\nconst Photos: FC = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(12);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isZoomed, setIsZoomed] = useState(false);\r\n  const [zoomUrl, setZoomUrl] = useState(\"\");\r\n  const [zoomLabel, setZoomLabel] = useState(\"\");\r\n  const { id }: idInterface = useParams();\r\n\r\n  useEffect(() => {\r\n    const valueCheck = typeof id === \"string\";\r\n    const path = valueCheck ? `albums/${id}/photos` : \"photos\";\r\n    const firstPhotoIndex = (page - 1) * itemsPerPage;\r\n    setIsLoading(true);\r\n    fetch(`${URL}/${path}?q=${query}`)\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        setPageCount(Math.ceil(responseData.length / itemsPerPage));\r\n        setPhotos(\r\n          responseData.slice(firstPhotoIndex, firstPhotoIndex + itemsPerPage)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [itemsPerPage, id, page, query]);\r\n\r\n  return (\r\n    <div>\r\n      {isZoomed && (\r\n        <ImageZoom\r\n          data-testid=\"testZoom\"\r\n          setZoomTrigger={setIsZoomed}\r\n          imgUrl={zoomUrl}\r\n          imgLabel={zoomLabel}\r\n        />\r\n      )}\r\n      <TopSearchBar label=\"Your Photos\" setSearchQuery={setQuery} />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div data-testid=\"testPhoto\">\r\n          <Grid>\r\n            {photos.map(({ id, title, thumbnailUrl, url }) => (\r\n              <Card\r\n                key={id}\r\n                name={title}\r\n                url={thumbnailUrl}\r\n                action={() => {\r\n                  zoom(setIsZoomed, setZoomUrl, url, setZoomLabel, title);\r\n                }}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n      <PageSelect\r\n        currentPage={page}\r\n        currentPageSetter={setPage}\r\n        pagesCount={pageCount}\r\n        itemCount={itemsPerPage}\r\n        itemsPerPageSetter={setItemsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n","import styled from 'styled-components'\r\n\r\nexport const Header = styled.div`\r\n    margin-bottom: 1.5rem;\r\n    font-family: \"Roboto\", sans-serif;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    background-color:white;\r\n    border-radius:5px;\r\n    box-shadow: 0px 5px 5px grey;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.div``;\r\nexport const Label = styled.div`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const FirstHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-bottom: 1px solid lightgrey;\r\n  svg {\r\n    padding-right: 1rem;\r\n  }\r\n`;\r\n\r\nexport const SectionHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-top: 1px solid lightgrey;\r\n  border-bottom: 1px solid lightgrey;\r\n  svg {\r\n    padding-right: 1rem;\r\n  }\r\n`;\r\n\r\nexport const SectionLayout = styled.div`\r\n  display: grid;\r\n  padding: 3rem 0.5rem 3rem 0.5rem;\r\n  grid-template-columns: 1.05fr 0.95fr;\r\n  grid-gap: 1rem;\r\n  grid-column-gap: 4rem;\r\n  @media(max-width:730px){\r\n      grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const CompanyLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 3rem 0.5rem 3rem 0.5rem;\r\n  gap:1rem;\r\n`;\r\n","import { colors } from \"../../colors\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: inline-flex;\r\n  background-color: ${colors.transparent};\r\n  position: relative;\r\n  align-items: center;\r\n  margin: 0rem 0.5rem;\r\n  padding: 0px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 5px;\r\n  svg {\r\n    vertical-align: center;\r\n    color: grey;\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\nexport const InputBox = styled.input`\r\n  font-family: \"Roboto\", sans-serif;\r\n  background-color: ${colors.transparent};\r\n  font-size: 1.25rem;\r\n  margin: 0.4rem 0rem;\r\n  padding-left: 1rem;\r\n  width: 100%;\r\n  border-width: 0px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  @media (max-width: 640px) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (max-width: 530px) {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\nexport const InputLabel = styled.span`\r\n  position: absolute;\r\n  font-family: \"Roboto\", sans-serif;\r\n  color: grey;\r\n  background-color: white;\r\n  top: -0.45rem;\r\n  left: 0.6rem;\r\n  font-size: 0.75rem;\r\n`;\r\n","import { InputBox, InputLabel, InputWrapper } from \"./InputField.styled\";\r\nimport React, { FC } from \"react\";\r\n\r\nimport { InputFieldProps } from \"./InputField.d\";\r\n\r\n/**\r\n * Input field used mostly in the Profile page.\r\n */\r\nconst InputField: FC<InputFieldProps> = ({ label, fillValue }) => (\r\n  <InputWrapper>\r\n    <InputLabel>{label}</InputLabel>\r\n    <InputBox type=\"text\" value={fillValue} readOnly={true} />\r\n  </InputWrapper>\r\n);\r\n\r\nexport default InputField;\r\n","import {\r\n  CompanyLayout,\r\n  FirstHeader,\r\n  Label,\r\n  Section,\r\n  SectionHeader,\r\n  SectionLayout,\r\n} from \"./ProfileLayout.styled\";\r\nimport React, { FC } from \"react\";\r\n\r\nimport InputField from \"../InputField/InputField\";\r\nimport PermContactCalendarIcon from \"@material-ui/icons/PermContactCalendar\";\r\nimport { ProfileLayoutProps } from \"./ProfileLayout.d\";\r\n\r\nconst ProfileLayout: FC<ProfileLayoutProps> = ({ user }) => {\r\n  const personal = [\r\n    { name: \"Name\", value: user.name },\r\n    { name: \"Phone\", value: user.phone },\r\n    { name: \"Username\", value: user.username },\r\n    { name: \"Website\", value: user.website },\r\n    { name: \"E-mail\", value: user.email },\r\n  ];\r\n  const address = [\r\n    { name: \"Street\", value: user.address.street },\r\n    { name: \"City\", value: user.address.city },\r\n    { name: \"Sufix\", value: user.address.suite },\r\n    { name: \"Zipcode\", value: user.address.zipcode },\r\n  ];\r\n\r\n  const company = [\r\n    { name: \"Name\", value: user.company.name },\r\n    { name: \"Catchphrase\", value: user.company.catchPhrase },\r\n    { name: \"Bs\", value: user.company.bs },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Section>\r\n        <FirstHeader>\r\n          <PermContactCalendarIcon />\r\n          <Label>Personal information</Label>\r\n        </FirstHeader>\r\n        <SectionLayout>\r\n          {personal.map(({ name, value }, index) => (\r\n            <InputField label={name} fillValue={value} key={index} />\r\n          ))}\r\n        </SectionLayout>\r\n        <SectionHeader>\r\n          <PermContactCalendarIcon />\r\n          <Label>Address</Label>\r\n        </SectionHeader>\r\n        <SectionLayout>\r\n          {address.map(({ name, value }, index) => (\r\n            <InputField label={name} fillValue={value} key={index} />\r\n          ))}\r\n        </SectionLayout>\r\n        <SectionHeader>\r\n          <PermContactCalendarIcon />\r\n          <Label>Company</Label>\r\n        </SectionHeader>\r\n        <CompanyLayout>\r\n          {company.map(({ name, value }, index) => (\r\n            <InputField label={name} fillValue={value} key={index} />\r\n          ))}\r\n        </CompanyLayout>\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileLayout;\r\n","import { Container, Header } from \"./Profile.styled\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\n\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ProfileLayout from \"../../components/ProfileLayout/ProfileLayout\";\r\nimport { URL } from \"../../APIAddress\";\r\nimport { idInterface } from \"./Profile.d\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst initUser = {\r\n  name: \"\",\r\n  phone: \"\",\r\n  username: \"\",\r\n  website: \"\",\r\n  email: \"\",\r\n  address: {\r\n    street: \"\",\r\n    city: \"\",\r\n    suite: \"\",\r\n    zipcode: \"\",\r\n  },\r\n  company: {\r\n    name: \"\",\r\n    catchPhrase: \"\",\r\n    bs: \"\",\r\n  },\r\n};\r\n\r\n/**\r\n * Component used to display the final layout of the Profile page.\r\n */\r\nconst Profile:FC = () => {\r\n  const [user, setUser] = useState(initUser);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { id }: idInterface = useParams();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(`${URL}/users/${id}/`)\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        setUser(responseData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          <Header>Your Profile</Header>\r\n          <Container>\r\n            <ProfileLayout user={user} />\r\n          </Container>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Albums from \"../Albums/Albums\";\nimport { Layout } from \"./App.styled\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Photos from \"../Photos/Photos\";\nimport Profile from \"../Profile/Profile\";\nimport React from \"react\";\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <NavBar></NavBar>\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={Photos} />\n        <Route exact path=\"/albums\" component={Albums} />\n        <Route path=\"/albums/:id/photos\" component={Photos} />\n        <Route path=\"/profile/:id\" component={Profile} />\n      </Switch>\n    </Layout>\n  </BrowserRouter>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport App from './pages/App/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}